// generated from rosidl_adapter/resource/msg.idl.em
// with input from hqv_public_interface/msg/GnssRtkCollection.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module hqv_public_interface {
  module msg {
    struct GnssRtkCollection {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "### RelPosNED ####")
      uint64 time_ms;

      @verbatim (language="comment", text=
        "uint8                   version" "\n"
        "uint8                   reserved0")
      uint16 ref_station_id;

      uint32 i_tow;

      int32 rel_pos_n;

      int32 rel_pos_e;

      int32 rel_pos_d;

      @verbatim (language="comment", text=
        "int32                   rel_pos_length" "\n"
        "int32                   rel_pos_heading" "\n"
        "uint8                   reserved1_0" "\n"
        "uint8                   reserved1_1" "\n"
        "uint8                   reserved1_2" "\n"
        "uint8                   reserved1_3")
      int8 rel_pos_hpn;

      int8 rel_pos_hpe;

      int8 rel_pos_hpd;

      @verbatim (language="comment", text=
        "int8                    rel_pos_hp_length")
      uint32 acc_n;

      uint32 acc_e;

      uint32 acc_d;

      @verbatim (language="comment", text=
        "uint32                  acc_length" "\n"
        "uint32                  acc_heading" "\n"
        "uint8                   reserved2_0" "\n"
        "uint8                   reserved2_1" "\n"
        "uint8                   reserved2_2" "\n"
        "uint8                   reserved2_3")
      uint32 flags;

      @verbatim (language="comment", text=
        "### PVT ####" "\n"
        "uint64              time_ms" "\n"
        "uint32              i_tow")
      uint16 year;

      uint8 month;

      uint8 day;

      uint8 hour;

      uint8 min;

      uint8 sec;

      uint8 validity_flags;

      uint32 t_acc;

      @verbatim (language="comment", text=
        "int32               nano")
      uint8 fix_type;

      uint8 fix_status_flags;

      uint8 flags2;

      uint8 num_sv;

      int32 lon;

      int32 lat;

      int32 height;

      int32 h_msl;

      uint32 h_acc;

      uint32 v_acc;

      int32 vel_n;

      int32 vel_e;

      int32 vel_d;

      int32 g_speed;

      int32 head_mot;

      uint32 s_acc;

      uint32 head_acc;
    };
  };
};
