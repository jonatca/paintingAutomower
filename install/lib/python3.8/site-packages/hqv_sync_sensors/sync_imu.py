import rclpy
from hqv_sync_sensors.sync_sensors import SyncedSubscriber
from hqv_public_interface.msg import MowerAcc, MowerWheelSpeed, MowerWheelCounter


class WheelSyncer(SyncedSubscriber):
    def __init__(self):
        name = "wheel_topic_syncer"
        topics = {
            "/hqv_mower/wheel0/counter": MowerWheelCounter,
            "/hqv_mower/wheel1/counter": MowerWheelCounter,
            "/hqv_mower/wheel0/speed": MowerWheelSpeed,
            "/hqv_mower/wheel1/speed": MowerWheelSpeed,
        }
        super().__init__(name, topics)

    def synced_callback(self, *args):
        self.get_logger().info(f"I heard a synced topic!, maybe repbulish")
        [print(a) for a in args]
        print("\n")


def main(args=None):
    rclpy.init(args=args)
    wheel_syncer = WheelSyncer()
    rclpy.spin(wheel_syncer)

    wheel_syncer.destroy_node()
    rclpy.shutdown()


if __name__ == "__main__":
    main()
