import rclpy
from rclpy.node import Node
import os

from hqv_public_interface.msg import MowerSystemPower

# TODO: make those constants as arguments
COUNTDOWN_LIMIT = 10
SHUTDOWN_COMMAND = "sudo poweroff -f"


class Subscriber(Node):

    def __init__(self):
        super().__init__('hqv_power_linux_shutdown_subscriber')
        self.subscription = self.create_subscription(
            MowerSystemPower,
            '/hqv_mower/systempower/status',
            self.listener_callback,
            10)
        self.command_triggered = False

    def listener_callback(self, msg):
        if (msg.mode == MowerSystemPower.ISYSTEMPOWER_MODE_SWITCH_TO_SHUTDOWN or
            msg.mode == MowerSystemPower.ISYSTEMPOWER_MODE_SWITCH_TO_STANDBY) and \
           (msg.countdown < COUNTDOWN_LIMIT) and not self.command_triggered:
            self.command_triggered = True
            print("Executing shutdown command:" + SHUTDOWN_COMMAND)
            os.system(SHUTDOWN_COMMAND)


def main(args=None):
    rclpy.init(args=args)

    subscriber = Subscriber()

    rclpy.spin(subscriber)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    subscriber.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
